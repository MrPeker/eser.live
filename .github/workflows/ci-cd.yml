name: Continuous Integration and Deployment

on:
  push:
    branches:
      - "**"

  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - "**"

  # schedule:
  #   - cron: "18 21 * * 6"

jobs:
  integration:
    name: Integration for Deno ${{ matrix.deno-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read # Needed to clone the repository

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - windows-latest
          # - macOS-latest
        deno-version:
          - 1.43.1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Runs pre-commit rules
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: "--all-files"

      - name: Create lcov file
        # if: matrix.os == 'ubuntu-latest'
        run: |
          deno task cov:gen

      - name: Upload coverage
        # if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          name: ${{ matrix.os }}
          files: ./test/cov_profile.lcov

  deployment:
    name: Deployment of ${{ github.ref_name }}
    needs: integration
    # && github.ref == 'refs/heads/main'
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read  # Needed to clone the repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Deno 1.x
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Ahead-of-time Build
        run: "deno task build"

      - name: Upload to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: "eserlive"
          entrypoint: "pkg/main/main.ts"
          root: "."
